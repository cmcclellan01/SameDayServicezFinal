@model SameDayServicezFinal.Models.Project
@using SameDayServicezFinal.Utils
@using Microsoft.AspNet.Identity
@using SameDayServicezFinal.Models


@{
    ApplicationDbContext db = new ApplicationDbContext();
    var order = db.Users.Where(p => p.Id == Model.ProjectsUsersId).SingleOrDefault();
}


<style>
    .error {
        color: red !important;
    }

    .disabled:hover {
        cursor: not-allowed;
    }

    .badge {
        width: 22px;
        height: 22px;
        line-height: 22px;
        text-align: center;
        padding: 0;
        border-radius: 50%;
    }

    .profile-card-5 {
        margin-top: 20px;
        min-height: 460px;
        max-height: 460px;
    }

        .profile-card-5 .btn {
            border-radius: 2px;
            text-transform: uppercase;
            font-size: 12px;
            padding: 7px 20px;
        }

        .profile-card-5 .card-img-block {
            /*width: 91%;*/
            margin: 0 auto;
            position: relative;
            top: -20px;
        }

            .profile-card-5 .card-img-block img {
                border-radius: 5px;
                box-shadow: 0 0 10px rgba(0,0,0,0.63);
            }

        .profile-card-5 h5 {
            color: #4E5E30;
            font-weight: 600;
        }

        .profile-card-5 p {
            font-size: 14px;
            font-weight: 300;
        }

    .card-img-top {
        max-width: 120px !important;
    }

    .rate-popover {
        color: #c4c4c4;
    }

    .oneStar {
        color: #3d381c;
    }

    .twoStars {
        color: #6d6126;
    }

    .threeStars {
        color: #c2aa36;
    }

    .fourStars {
        color: #e2c327;
    }

    .fiveStars {
        color: #f3cb06;
    }

    .table-responsive {
        display: table;
    }
</style>






<div class="col-auto view-project-main-div">
    <fieldset>
        <div class="card project-id-@Model.ProjectsId">
            <div class="card-header">
                <h3 class="card-title"><span class="project-editing-type"></span> Project - @Model.ProjectTitle</h3>
                <span class="badge bg-red badge-corner " style="margin-left:10px"> </span> - Needs fixed before you can publish your project.
                <span class="badge bg-orange badge-corner " style="margin-left:10px"> </span> - This is a information / alert(s) for your project.

            </div>
            <div class="card-body">

                <ul class="nav nav-tabs nav-justified" style="font-size:smaller" id="myTab-@Model.ProjectsId" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" id="basicinformation-@Model.ProjectsId-tab" data-toggle="tab" href="#basicinformation-@Model.ProjectsId" role="tab" aria-controls="basicinformation-@Model.ProjectsId" aria-selected="true">
                            Project Information
                            <span class="badge bg-red badge-corner basic-info-badge"></span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="skills-@Model.ProjectsId-tab" data-toggle="tab" href="#skills-@Model.ProjectsId" role="tab" aria-controls="skills-@Model.ProjectsId" aria-selected="false">
                             Professions
                            <span class="badge bg-red badge-corner skills-badge"></span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="documents-@Model.ProjectsId-tab" data-toggle="tab" href="#documents-@Model.ProjectsId" role="tab" aria-controls="documents-@Model.ProjectsId" aria-selected="false">Project Documents</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="compensation-@Model.ProjectsId-tab" data-toggle="tab" href="#compensation-@Model.ProjectsId" role="tab" aria-controls="compensation-@Model.ProjectsId" aria-selected="false">
                             Compensation
                            <span class="badge bg-red badge-corner compensation-badge"></span>

                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="Applicants-@Model.ProjectsId-tab" data-toggle="tab" href="#Applicants-@Model.ProjectsId" role="tab" aria-controls="Applicants-@Model.ProjectsId" aria-selected="false">
                            Applicants
                            @if (Model.ProjectApplicants.Where(p => p.AssinedToProject == false && p.Rejected == false).Count() > 0)
                            {
                                <span class="badge bg-orange badge-corner ProjectApplicants-badge">@Model.ProjectApplicants.Where(p => p.AssinedToProject == false && p.Rejected == false).Count()</span>
                            }
                            else
                            {
                                <span class="badge bg-orange badge-corner ProjectApplicants-badge"></span>
                            }


                            </a>
                    </li>

                    @{
                        if (!(bool)Session["IsInContractorMode"])
                        {
                            <li class="nav-item">
                                <a class="nav-link" id="assigned-contactors-@Model.ProjectsId-tab" data-toggle="tab" href="#assigned-contactors-@Model.ProjectsId" role="tab" aria-controls="assigned-contactors-@Model.ProjectsId" aria-selected="false">
                                    Accepted Contactors
                                    @if (Model.ProjectApplicants.Where(p => p.AssinedToProject == true && p.Rejected == false).Count() > 0)
                                    {
                                        <span class="badge bg-green badge-corner AssinedToProject-badge">@Model.ProjectApplicants.Where(p => p.AssinedToProject == true && p.Rejected == false).Count()</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-green badge-corner AssinedToProject-badge"></span>
                                    }
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="project-wallet-@Model.ProjectsId-tab" data-toggle="tab" href="#project-wallet-@Model.ProjectsId" role="tab" aria-controls="project-wallet-@Model.ProjectsId" aria-selected="false">Wallet</a>
                            </li>

                        }
                    }




                    <li class="nav-item">
                        <a class="nav-link" id="maps-@Model.ProjectsId-tab" data-toggle="tab" href="#maps-@Model.ProjectsId" role="tab" aria-controls="maps-@Model.ProjectsId" aria-selected="false">Maps</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="notes-@Model.ProjectsId-tab" data-toggle="tab" href="#notes-@Model.ProjectsId" role="tab" aria-controls="notes-@Model.ProjectsId" aria-selected="false">Notes</a>
                    </li>
                </ul>

                <div class="tab-content" id="myTabContent">
                    <div class="tab-pane fade show active" id="basicinformation-@Model.ProjectsId" role="tabpanel" aria-labelledby="basicinformation-@Model.ProjectsId-tab">
                        <div class="basicinformation-@Model.ProjectsId" style="min-height:500px">
                            <div class="card card-custom">
                                <div class="row">
                                    <div class="col-lg-3 ">
                                        <div class="form-row">
                                            <div class="form-group col-md-12">
                                                @Html.LabelFor(m => m.ProjectTitle, new { @class = "control-label text-light" })
                                                @Html.TextBoxFor(m => m.ProjectTitle, new { @class = "form-control", style = "min-width: 100%!important;" })

                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-lg-3 ">
                                        <div class="form-row">
                                            <div class="form-group col-md-12">
                                                @Html.LabelFor(x => x.Duration, new { @class = "control-label text-light" })
                                                @Html.DropDownListFor(m => m.Duration, Model.DurationList, "- Please select a Duration -", new { @class = "form-control", style = "min-width: 100%!important;" })

                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-lg-3 ">
                                        <div class="form-row">
                                            <div class="form-group col-md-12">
                                                @Html.LabelFor(m => m.NumberOfContractorsNeeded, "Number of Needed Contractors:", new { @class = "control-label text-light" })
                                                @Html.TextBoxFor(m => m.NumberOfContractorsNeeded, new { @class = "form-control", style = "min-width: 100%!important;", @type = "number" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-lg-3 ">
                                        <div class="form-row">
                                            <div class="form-group col-md-12">
                                                @Html.LabelFor(m => m.NumberOfDaysHelpIsNeeded, "Number of Days Help Is Needed:", new { @class = "control-label text-light" })
                                                @Html.TextBoxFor(m => m.NumberOfDaysHelpIsNeeded, new { @class = "form-control", style = "min-width: 100%!important;", @type = "number" })
                                            </div>
                                        </div>
                                    </div>

                                </div>

                                <div class="row">
                                    <div class="col-12 ">
                                        <div class="form-row">
                                            <div class="form-group col-md-12">
                                                @Html.LabelFor(m => m.Description, "Project Description", new { @class = "control-label text-light project-description-lbl" })
                                                @Html.TextAreaFor(m => m.Description, new { @class = "form-control notes-description", rows = "6", cols = "15", style = "min-width: 100%!important;" })

                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-row">

                                    @{
                                        if (!(bool)Session["IsInContractorMode"])
                                        {
                                            <div class="form-group col-md-4 ">
                                                @Html.LabelFor(m => m.Address, "Project Address", new { @class = "control-label text-light" })
                                                @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })

                                            </div>
                                        }

                                    }

                                    <div class="form-group  col-md-4">
                                        <!-- City-->
                                        @Html.LabelFor(m => m.City, "Project City", new { @class = "control-label text-light" })
                                        @Html.TextBoxFor(m => m.City, new { @class = "form-control" })

                                    </div>

                                    @{
                                        if ((bool)Session["IsInContractorMode"])
                                        {
                                            <div class="form-group  col-md-4">
                                                @Html.LabelFor(m => m.ZipCode, "Project Zip Code", new { @class = "control-label text-light" })
                                                @Html.TextBoxFor(m => m.ZipCode, new { @class = "form-control" })

                                            </div>
                                        }

                                    }

                                    <div class="form-group col-md-4 ">
                                        @Html.LabelFor(x => x.State, "Project State", new { @class = "control-label text-light" })
                                        @Html.DropDownListFor(m => m.State, Model.States, "- Please select a state -", new { @class = "form-control", style = "min-width: 100%!important;" })

                                    </div>


                                </div>



                                @{
                                    if (!(bool)Session["IsInContractorMode"])
                                    {
                                        <div class="form-row">
                                            <div class="form-group  col-md-4">
                                                @Html.LabelFor(m => m.ZipCode, "Project Zip Code", new { @class = "control-label text-light" })
                                                @Html.TextBoxFor(m => m.ZipCode, new { @class = "form-control" })

                                            </div>


                                            <div class="form-group  col-md-4">
                                                @Html.LabelFor(m => m.ProjectStatus, "Project Status", new { @class = "control-label text-light" })
                                                @Html.EnumDropDownListFor(x => x.ProjectStatus, "Select Project Status", new { @class = "form-control project-status-dd" })

                                            </div>

                                        </div>
                                    }

                                }





                            </div>
                        </div>
                    </div>

                    <div class="tab-pane fade" id="skills-@Model.ProjectsId" role="tabpanel" aria-labelledby="skills-@Model.ProjectsId-tab">
                        <div class="skills-@Model.ProjectsId" style="min-height:500px">
                            <div class="card card-custom">
                                <div class="form-row">

                                    <div class="form-group col-md-12 no-edit ">
                                        <span class=" control-label clearfix" style="color:white">(Choose a letter to start) </span>
                                        <span class=" control-label text-light clearfix">Alphabetical List of Professions</span>
                                        <span class="btn btn-success Alphabetical  btn-sm" role="button" style="margin: 5px;">A</span>
                                        <span class="btn btn-success Alphabetical  btn-sm" role="button" style="margin: 5px;">B</span>
                                        <span class="btn btn-success Alphabetical  btn-sm" role="button" style="margin: 5px;">C</span>
                                        <span class="btn btn-success Alphabetical btn-sm" role="button" style="margin: 5px;">D</span>
                                        <span class="btn btn-success Alphabetical btn-sm" role="button" style="margin: 5px;">E</span>
                                        <span class="btn btn-success Alphabetical btn-sm" role="button" style="margin: 5px;">F</span>
                                        <span class="btn btn-success Alphabetical btn-sm" role="button" style="margin: 5px;">G</span>
                                        <span class="btn btn-success Alphabetical btn-sm" role="button" style="margin: 5px;">H</span>
                                        <span class="btn btn-success Alphabetical btn-sm" role="button" style="margin: 5px;">I</span>
                                        <span class="btn btn-success Alphabetical btn-sm" role="button" style="margin: 5px;">J</span>
                                        <span class="btn btn-success Alphabetical btn-sm" role="button" style="margin: 5px;">K</span>
                                        <span class="btn btn-success Alphabetical btn-sm" role="button" style="margin: 5px;">L</span>
                                        <span class="btn btn-success Alphabetical btn-sm" role="button" style="margin: 5px;">M</span>
                                        <span class="btn btn-success Alphabetical btn-sm" role="button" style="margin: 5px;">N</span>
                                        <span class="btn btn-success Alphabetical btn-sm" role="button" style="margin: 5px;">O</span>
                                        <span class="btn btn-success Alphabetical btn-sm" role="button" style="margin: 5px;">P</span>
                                        <span class="btn btn-success Alphabetical btn-sm" role="button" style="margin: 5px;">Q</span>
                                        <span class="btn btn-success Alphabetical btn-sm" role="button" style="margin: 5px;">R</span>
                                        <span class="btn btn-success Alphabetical btn-sm" role="button" style="margin: 5px;">S</span>
                                        <span class="btn btn-success Alphabetical btn-sm" role="button" style="margin: 5px;">T</span>
                                        <span class="btn btn-success Alphabetical btn-sm" role="button" style="margin: 5px;">U</span>
                                        <span class="btn btn-success Alphabetical btn-sm" role="button" style="margin: 5px;">V</span>
                                        <span class="btn btn-success Alphabetical btn-sm" role="button" style="margin: 5px;">W</span>
                                        <span class="btn btn-success Alphabetical btn-sm" role="button" style="margin: 5px;">X</span>
                                        <span class="btn btn-success Alphabetical btn-sm" role="button" style="margin: 5px;">Y</span>
                                        <span class="btn btn-success Alphabetical btn-sm" role="button" style="margin: 5px;">Z</span>



                                    </div>
                                </div>
                                <div class="form-row">
                                    <div class="form-group  col-md-12 Professions ">
                                        @Html.DropDownListFor(m => m.Professions, Model.Professions, "- Please Select A Profession Category -", new { @class = "form-control max-select", style = "min-width: 100%!important;" })
                                    </div>
                                </div>
                                <div class="form-row">
                                    <div class="form-group  col-md-12 SubProfessions ">
                                        @Html.DropDownListFor(m => m.SubProfessions, Model.SubProfessions, "- Please Select A Job Title -", new { @class = "form-control max-select", style = "min-width: 100%!important;" })

                                    </div>
                                </div>

                                <div class="form-row SubProfessions">
                                    <div class="form-group col-md-12">
                                        <button type="button" class="btn btn-info add">Add Job Title</button>

                                    </div>
                                </div>

                                <div class="form-row">
                                    <hr style="width: 100%; color: white; height: 1px; background-color:white;" class="no-edit" />
                                    Current Selected Profession(s):
                                    <div class="form-group col-md-12 results ">
                                        @for (int i = 0; i < Model.ProjectCategories.ToList().Count(); i++)
                                        {
                                            <div class="result-added text-light project-skills" style="font-size:small">
                                                <span class="btn btn-outline-danger btn-sm remove no-edit"
                                                      data-id="@Model.ProjectCategories.ToList()[i].ProjectsMainCatId @Model.ProjectCategories.ToList()[i].ProjectsSubCatId"
                                                      data-mainId="@Model.ProjectCategories.ToList()[i].ProjectsMainCatId"
                                                      data-subId="@Model.ProjectCategories.ToList()[i].ProjectsSubCatId"
                                                      role="button" style="margin: 5px;">remove</span>
                                                @Model.ProjectCategories.ToList()[i].ProjectsMainCatName -- @Model.ProjectCategories.ToList()[i].ProjectsSubCatName
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane fade" id="documents-@Model.ProjectsId" role="tabpanel" aria-labelledby="documents-@Model.ProjectsId-tab">
                        <div class="documents-@Model.ProjectsId" style="min-height:500px">
                            <div class="card card-custom">
                                <div class="form-row">
                                    <div class="form-group col-md-12">
                                        <div class="card" style="min-height: 264px">
                                            <div class="card-body">
                                                <div class="dropzone dz-clickable no-edit" id="dropzoneDocumentUpload" style="background-color:#00BFFF;"> </div>
                                                <div class="ProfileImage "></div>

                                                <div style="margin-top: 20px;"><h4 class="text-center dropzone-error text-light small"></h4></div>


                                                @for (int i = 0; i < Model.ProjectDocuments.ToList().Count(); i++)
                                                {
                                                    <div class="card  @Model.ProjectDocuments.ToList()[i].ImageName.Split('.')[0]" style="margin-bottom: 10px;margin-top: 10px;background-color: rgba(255, 255, 255, 0.5) !important;">
                                                        <div class="card-body">
                                                            <div class="remove-profileimage-div">
                                                                <img style="margin-bottom:10px;" class="img-thumbnail js-smartPhoto" src="/Uploads/Projects/@Model.ProjectDocuments.ToList()[i].ProjectId/@Model.ProjectDocuments.ToList()[i].UsersId/@Model.ProjectDocuments.ToList()[i].ImageName">
                                                                <button class="btn no-edit remove-profileimage-@Model.ProjectDocuments.ToList()[i].ImageName.Split('.')[0]">X</button>
                                                            </div>
                                                            <div class="form-inline">
                                                                <div class="form-group" style="margin-right: 10px !important;">
                                                                    <label style="padding:5px">Add Comment</label>
                                                                    <input type="text" class="form-control @Model.ProjectDocuments.ToList()[i].ImageName.Split('.')[0]_comment" value=" @Model.ProjectDocuments.ToList()[i].ImageComment">
                                                                </div>
                                                                <button class="btn btn-primary @Model.ProjectDocuments.ToList()[i].ImageName.Split('.')[0]_submit" style="margin-left: 5px">Add</button>
                                                                <div class="@Model.ProjectDocuments.ToList()[i].ImageName.Split('.')[0]-comment-added" style="margin-left: 10px;color: #EAF901 !important;">
                                                                    <h6>Comment Added</h6>
                                                                </div>

                                                                <script type="text/javascript">
                                                $(".@Model.ProjectDocuments.ToList()[i].ImageName.Split('.')[0]-comment-added").hide();
                                                                </script>
                                                            </div>
                                                        </div>
                                                    </div>


                                                    <script>
                                    //comment button
                                    $('.@Model.ProjectDocuments.ToList()[i].ImageName.Split('.')[0]_submit').click(function () {


                                        // add comment to document/image
                                        $.ajax({
                                            type: "POST",
                                            url: "/Account/SaveProjectImageComment?ImageName=@Model.ProjectDocuments.ToList()[i].ImageName&comment=" + $('.@Model.ProjectDocuments.ToList()[i].ImageName.Split('.')[0]_submit').parent().find('input').val(),
                                            success: function () {
                                                // show them that the comment was added then fade away
                                                $('.@Model.ProjectDocuments.ToList()[i].ImageName.Split('.')[0]-comment-added').fadeIn(1000).fadeOut(5000);
                                            }
                                        });
                                        return false;
                                    });

                                    // remove image and comment
                                    $('.remove-profileimage-@Model.ProjectDocuments.ToList()[i].ImageName.Split('.')[0]').click(function () {


                                        if (confirm('Are you sure you want to delete this?')) {
                                            $.ajax({
                                                type: "POST",
                                                url: "/Account/RemoveUpload?type=project&projectId=@Model.ProjectsId&imagename=" + $(this).parent().find('img').attr('src'),
                                                success: function () {

                                                    // it has been deleted form the server now delete from the UI
                                                    $('.@Model.ProjectDocuments.ToList()[i].ImageName.Split('.')[0]').remove();

                                                }
                                            });
                                        }

                                        return false;
                                    });
                                                    </script>


                                                }


                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane fade" id="compensation-@Model.ProjectsId" role="tabpanel" aria-labelledby="compensation-@Model.ProjectsId-tab">
                        <div class="compensation-@Model.ProjectsId" style="min-height:500px">
                            <div class="card card-custom">
                                <div class="form-row">
                                    <div class="form-group col-md-12 ">
                                        @Html.LabelFor(x => x.SelectedProjectCompensationPackage, "Project Compensation type", new { @class = "control-label text-light" })
                                        @Html.DropDownListFor(m => m.SelectedProjectCompensationPackage, Model.CompensationTypeList, "- Please Select A Project Compensation Type -", new { @class = "form-control", style = "min-width: 100%!important;" })

                                    </div>
                                </div>


                                @*TYPES OF PROJECT COMP TYPE DESCRIPTIONS*@
                                <div class="form-row hourly-rate">
                                    <div class="form-group col-md-12 ">
                                        <div class="card border-primary" style="margin-bottom:25px;border-radius:10px">
                                            <div class="card-body">
                                                <p class="card-text">
                                                    <span class="text-light small">Pay By The Hour:</span> <span class="table-dark small"> This means that for every billable hour you will be charged by the rate that you list below.</span>
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-row project-rate">
                                    <div class="form-group col-md-12 ">
                                        <div class="card border-primary" style="margin-bottom:25px;border-radius:10px">
                                            <div class="card-body">
                                                <p class="card-text">
                                                    <span class="text-light small">Pay By The Project:</span> <span class="table-dark small"> This means that you will be charged by the rate that you list below for the whole entire project.</span>
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-row project-bid-rate">
                                    <div class="form-group col-md-12 ">
                                        <div class="card border-primary" style="margin-bottom:25px;border-radius:10px">
                                            <div class="card-body">
                                                <p class="card-text">
                                                    <span class="text-light small">Pay By Proposal:</span> <span class="table-dark small"> This means that there will be contractors sending proposals for your project</span>
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-row">
                                    <div class="form-group col-md-12 ">
                                        @Html.LabelFor(m => m.ByTheHourRate, "Project Hourly Rate", new { @class = "control-label text-light hourly-rate" })
                                        <div class="input-group  hourly-rate">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text">$</span>
                                            </div>
                                            @Html.TextBoxFor(m => m.ByTheHourRate, new { @class = "form-control hourly-rate currency", @onkeypress = "return validateDec(event)", @type = "number" })

                                        </div>
                                    </div>
                                </div>

                                <div class="form-row">
                                    <div class="form-group col-md-12 ">
                                        @Html.LabelFor(m => m.ByTheProjectRate, "Total Project Rate", new { @class = "control-label text-light project-rate" })
                                        <div class="input-group  project-rate">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text">$</span>
                                            </div>

                                            @Html.TextBoxFor(m => m.ByTheProjectRate, new { @class = "form-control project-rate currency", @onkeypress = "return validateDec(event)", @type = "number" })

                                        </div>
                                    </div>
                                </div>

                                <div class="form-row">
                                    <div class="form-group col-md-12 ">
                                        @Html.LabelFor(m => m.StartingBidRate, "Starting Project Bid Rate", new { @class = "control-label text-light project-bid-rate" })
                                        <div class="input-group  project-bid-rate">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text">$</span>
                                            </div>

                                            @Html.TextBoxFor(m => m.StartingBidRate, new { @class = "form-control project-bid-rate currency", @onkeypress = "return validateDec(event)", @type = "number" })

                                        </div>
                                    </div>
                                </div>

                                <div class="form-row">
                                    <div class="form-group col-md-12 ">
                                        @Html.LabelFor(m => m.StartingBidDate, "Starting Project Bid Date", new { @class = "control-label text-light project-bid-rate" })
                                        <div class="input-group  project-bid-rate startdate-project-datepicker">
                                            @Html.HiddenFor(m => m.StartingBidDate)

                                        </div>
                                    </div>
                                </div>

                                <div class="form-row">
                                    <div class="form-group col-md-12 ">
                                        @Html.LabelFor(m => m.EndingBidDate, "Ending Project Bid Date", new { @class = "control-label text-light project-bid-rate" })
                                        <div class="input-group  project-bid-rate enddate-project-datepicker">
                                            @Html.HiddenFor(m => m.EndingBidDate)

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane fade" id="assigned-contactors-@Model.ProjectsId" role="tabpanel" aria-labelledby="assigned-contactors-@Model.ProjectsId-tab">
                        <div style="min-height:500px">
                            <div class="card card-custom">
                                <div class="col-md-12">
                                    <div class="row assigned-contactors">
                                        @{
                                            var s = 1;
                                            var imagename = "";
                                        }
                                        @foreach (var profile in Model.ProjectAssignments)
                                        {
                                            var profileGuid = Guid.NewGuid();

                                            <div class="col-lg-4">
                                                <div class="card card-profile @profileGuid-card " style="border-top-right-radius: 50px;border-top-left-radius: 50px;background-color: black !important;border:1px grey solid;-webkit-box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);-moz-box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);overflow:hidden">


                                                    <div class="card bg-light mb-3 col-12" style="background-image:url('/content/images/5d26132c3835b_thumb900.jpg')">
                                                        <div class="row mx-auto">
                                                            <div class="card-headerA col-4 " style="background-color:transparent!important;border-bottom:none!important">
                                                                @if (@profile.ProfileImage == null)
                                                                {
                                                                    imagename = "https://randomuser.me/api/portraits/men/" + s + ".jpg";

                                                                    @Html.Image(imagename, "card-profile-img", "", "");


                                                                }
                                                                else
                                                                {
                                                                    @Html.Image("/Uploads/ProfileImages/" + @profile.UsersId + "/" + @profile.ProfileImage, "card-profile-img", "", "");
                                                                }
                                                            </div>
                                                            <div class="card-body col-7 ">
                                                                <span id="rateMe" data-search="rating" style="font-size:1rem">
                                                                    <i class="fas fa-star py-2 px-1 rate-popover-@profileGuid" data-index="0" data-html="true" data-toggle="popover" data-placement="top" title="Very bad"></i>
                                                                    <i class="fas fa-star py-2 px-1 rate-popover-@profileGuid" data-index="1" data-html="true" data-toggle="popover" data-placement="top" title="Poor"></i>
                                                                    <i class="fas fa-star py-2 px-1 rate-popover-@profileGuid" data-index="2" data-html="true" data-toggle="popover" data-placement="top" title="OK"></i>
                                                                    <i class="fas fa-star py-2 px-1 rate-popover-@profileGuid" data-index="3" data-html="true" data-toggle="popover" data-placement="top" title="Good"></i>
                                                                    <i class="fas fa-star py-2 px-1 rate-popover-@profileGuid" data-index="4" data-html="true" data-toggle="popover" data-placement="top" title="Excellent"></i>
                                                                </span>
                                                                <script>
                                                                $(document).ready(function () {
                                                                     SetStars($('.rate-popover-@profileGuid'),@profile.ProfileRating);
                                                                });
                                                                </script>
                                                                <h4 class="mb-3 " data-search="displayname">@profile.ProfileDisplayName</h4>
                                                                <h5 class="mb-3 " data-search="hourlyrate">Hourly Rate: $@profile.ByTheHourRate</h5>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="card-body text-center text-light grayscale">
                                                        @*<div class="card ">
            <h4 class="card-title">My Bios</h4>
            <div class="card-body my-bios " style="max-height:none">

                <p class="mb-4 text-left  more" font-size: 1rem;"> @profile.ProfileBios</p>
            </div>
        </div>*@

                                                        @*<div class="card " style="min-height:200px;max-height:200px;overflow:hidden">
            <div class="card-body ">
                <h4 class="card-title">My Job Professions</h4>
                <table class=" table-striped text-left " style="width:100%;color:grey !important">
                    <thead>
                        <tr>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var profession in @profile.ProfileProfessions)
                        {
                            <tr>
                                <td style="padding:2px">@profession.SubCatName</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>*@



                                                        @*<div class="card " style="min-height:200px;max-height:800px;overflow:auto">
            <div class="card-body ">
                <h4 class="card-title">My Past Projects</h4>
                @foreach (var projectrating in Model.ProjectRating)
                {
                    @Html.Partial("_ProjectRating", projectrating)
                }
            </div>
        </div>*@



                                                        <div class="card " style="min-height:200px;max-height:800px;overflow:auto">
                                                            <div class="card-body ">
                                                                <h4 class="card-title">Show your contactor that you care and write them a review.</h4>
                                                                @{
                                                                    var rating = new ProjectRating();
                                                                    rating.ContractorId = profile.UsersId;
                                                                    rating.ProjectsId = Model.ProjectsId;

                                                                }
                                                                @Html.Partial("_Contractorreview", rating)

                                                            </div>
                                                        </div>


                                                        <div class="row justify-content-end">
                                                            <div class="col-auto">
                                                                <span class="btn btn-dark MyFont " data-contractorid="@profile.UsersId" data-contractor-display-name="@profile.ProfileDisplayName" data-toggle="modal" data-target="#messageModal">Message Contractor</span>
                                                            </div>
                                                            <div class="col-auto"> <span class="btn btn-dark MyFont profileA-btn" data-contractor-id="@profile.UsersId">View Full Profile</span></div>
                                                          
                                                        </div>



                                                    </div>
                                                </div>
                                            </div>

                                            s += 1;
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="tab-pane fade" id="project-wallet-@Model.ProjectsId" role="tabpanel" aria-labelledby="project-wallet-@Model.ProjectsId-tab">
                        <div class="container-fluid" style="margin-top: 63px;margin-left: 25px;">
                            <div class="row">
                                <div class="well col-xs-10 col-sm-10 col-md-6 col-xs-offset-1 col-sm-offset-1 col-md-offset-3">
                                    <div class="row">
                                        <div class="col-xs-6 col-sm-6 col-md-6">
                                            <address>
                                                <strong>@order.DisplayName</strong>
                                                <br>
                                                @order.Address
                                                <br>
                                                @order.City, @order.State @order.ZipCode
                                                <br>
                                                <abbr title="Phone">P:</abbr> @order.PhoneNumber
                                            </address>
                                        </div>
                                        <div class="col-xs-6 col-sm-6 col-md-6 text-right">
                                            <p>
                                                <em>Date: @DateTime.Now.ToString("dddd, dd MMMM yyyy")</em>
                                            </p>
                                            <p>
                                                <em>Receipt #: @order.Id</em>
                                            </p>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="text-center">
                                            <h1>Receipt</h1>
                                        </div>

                                        <table class="table text-success">
                                            <thead>
                                                <tr>
                                                    <th>Product</th>
                                                    <th>#</th>
                                                    <th class="text-center">Price</th>
                                                    <th class="text-center">Total</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <td class="col-md-9"><h4><em>Baked Rodopa Sheep Feta</em></h4></td>
                                                    <td class="col-md-1" style="text-align: center"> 2 </td>
                                                    <td class="col-md-1 text-center">$13</td>
                                                    <td class="col-md-1 text-center">$26</td>
                                                </tr>
                                                <tr>
                                                    <td class="col-md-9"><h4><em>Lebanese Cabbage Salad</em></h4></td>
                                                    <td class="col-md-1" style="text-align: center"> 1 </td>
                                                    <td class="col-md-1 text-center">$8</td>
                                                    <td class="col-md-1 text-center">$8</td>
                                                </tr>
                                                <tr>
                                                    <td class="col-md-9"><h4><em>Baked Tart with Thyme and Garlic</em></h4></td>
                                                    <td class="col-md-1" style="text-align: center"> 3 </td>
                                                    <td class="col-md-1 text-center">$16</td>
                                                    <td class="col-md-1 text-center">$48</td>
                                                </tr>
                                                <tr>
                                                    <td>   </td>
                                                    <td>   </td>
                                                    <td class="text-right">
                                                        <p>
                                                            <strong>Subtotal: </strong>
                                                        </p>
                                                        <p>
                                                            <strong>Tax: </strong>
                                                        </p>
                                                    </td>
                                                    <td class="text-center">
                                                        <p>
                                                            <strong>$82.00</strong>
                                                        </p>
                                                        <p>
                                                            <strong>$4.92</strong>
                                                        </p>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>   </td>
                                                    <td>   </td>
                                                    <td class="text-right"><h4><strong>Total: </strong></h4></td>
                                                    <td class="text-center text-danger"><h4><strong>$86.92</strong></h4></td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <span class="btn btn-success btn-lg btn-block make-payment">
                                            Pay Now   <span class="glyphicon glyphicon-chevron-right"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>



                            <div class="row">
                                <div class="col-4">                            
                                    <div style="margin-top:50px;padding:20px;background-color:white;display:none" class="paypal-cc">
                                        <!-- Set up a container element for the button -->
                                        <div id="paypal-button-container" style="background-color:white"></div>



                                        <script>
                                            //// Render the PayPal button into #paypal-button-container




                                            paypal.Buttons({
                                                enableStandardCardFields: true,
                                                createOrder: function (data, actions) {
                                                    return actions.order.create({
                                                        intent: 'CAPTURE',
                                                        payer: {
                                                            name: {
                                                                givenName: '@order.FirstName',
                                                                @*familyname:'@order.LastName',*@
                                                                surname: '@order.LastName'
                                                            },
                                                            address: {
                                                                address_line_1:'@order.Address' ,
                                                                address_line_2: '@order.Address2',
                                                                admin_area_2: '@order.City',
                                                                admin_area_1: '@order.State',
                                                                postal_code: '@order.ZipCode',
                                                                country_code: 'US'
                                                            },
                                                            email_address: "@order.Email",
                                                            phone: {
                                                                phone_type: "MOBILE",
                                                                phone_number: {
                                                                    national_number: "@order.PhoneNumber"
                                                                }
                                                            }
                                                        },
                                                        purchase_units: [
                                                            {
                                                                amount: {
                                                                    value: '86.92',
                                                                    currency_code: 'USD'
                                                                },
                                                                shipping: {
                                                                    address: {
                                                                        address_line_1:'@order.Address' ,
                                                                        address_line_2: '@order.Address2',
                                                                        admin_area_2: '@order.City',
                                                                        admin_area_1: '@order.State',
                                                                        postal_code: '@order.ZipCode',
                                                                        country_code: 'US'
                                                                    }
                                                                },
                                                            }
                                                        ]
                                                    });
                                                },
                                                onApprove: function(data, actions) {
                                                  // This function captures the funds from the transaction.
                                                  return actions.order.capture().then(function(details) {
                                                    // This function shows a transaction success message to your buyer.
                                                    //  alert('Transaction completed by ' + details.payer.name.given_name);
                                                      console.log(details)
                                                      swal("Your transaction has been processed. You have been e-mailed a transaction receipt", "", "success");
                                                      $('.cc-result').toggle();
                                                  });
                                                }
                                            }).render('#paypal-button-container');
                                        </script>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12">

                                    https://developer.paypal.com/  <br />
                                    Card Type: Visa  <br />

                                    Card Number: 4648014512952251  <br />

                                    Expiration Date: 04/2021  <br />

                                    CVV: 699  <br />

                                    <br />
                                    <textarea style="min-width:90%;display:none" cols="30" rows="50" class="cc-result">
                                            {
                                              "create_time": "2019-12-17T22:07:03Z",
                                              "update_time": "2019-12-17T22:07:56Z",
                                              "id": "4AA65952TF297002H",
                                              "intent": "CAPTURE",
                                              "status": "COMPLETED",
                                              "payer": {
                                                "email_address": "jm.millerzconstruction@gmail.com",
                                                "payer_id": "3S88T7F9FQ2S4",
                                                "address": {
                                                  "country_code": "US"
                                                },
                                                "name": {
                                                  "given_name": "Jason",
                                                  "surname": "miller"
                                                }
                                              },
                                              "purchase_units": [
                                                {
                                                  "reference_id": "default",
                                                  "soft_descriptor": "PAYPAL *JOHNDOESTES",
                                                  "amount": {
                                                    "value": "86.92",
                                                    "currency_code": "USD"
                                                  },
                                                  "payee": {
                                                    "email_address": "sb-jlyu3759147@business.example.com",
                                                    "merchant_id": "UWYGR5CT9HEAN"
                                                  },
                                                  "shipping": {
                                                    "name": {
                                                      "full_name": "Jason miller"
                                                    },
                                                    "address": {
                                                      "address_line_1": "49 South Street, Box 5",
                                                      "admin_area_2": "Hartford",
                                                      "admin_area_1": "IA",
                                                      "postal_code": "50118",
                                                      "country_code": "US"
                                                    }
                                                  },
                                                  "payments": {
                                                    "captures": [
                                                      {
                                                        "status": "COMPLETED",
                                                        "id": "6YY047167V316442R",
                                                        "final_capture": true,
                                                        "create_time": "2019-12-17T22:07:56Z",
                                                        "update_time": "2019-12-17T22:07:56Z",
                                                        "amount": {
                                                          "value": "86.92",
                                                          "currency_code": "USD"
                                                        },
                                                        "seller_protection": {
                                                          "status": "ELIGIBLE",
                                                          "dispute_categories": [
                                                            "ITEM_NOT_RECEIVED",
                                                            "UNAUTHORIZED_TRANSACTION"
                                                          ]
                                                        },
                                                        "links": [
                                                          {
                                                            "href": "https://api.sandbox.paypal.com/v2/payments/captures/6YY047167V316442R",
                                                            "rel": "self",
                                                            "method": "GET",
                                                            "title": "GET"
                                                          },
                                                          {
                                                            "href": "https://api.sandbox.paypal.com/v2/payments/captures/6YY047167V316442R/refund",
                                                            "rel": "refund",
                                                            "method": "POST",
                                                            "title": "POST"
                                                          },
                                                          {
                                                            "href": "https://api.sandbox.paypal.com/v2/checkout/orders/4AA65952TF297002H",
                                                            "rel": "up",
                                                            "method": "GET",
                                                            "title": "GET"
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                }
                                              ],
                                              "links": [
                                                {
                                                  "href": "https://api.sandbox.paypal.com/v2/checkout/orders/4AA65952TF297002H",
                                                  "rel": "self",
                                                  "method": "GET",
                                                  "title": "GET"
                                                }
                                              ]
                                            }
                                        </textarea>




                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="tab-pane fade" id="maps-@Model.ProjectsId" role="tabpanel" aria-labelledby="maps-@Model.ProjectsId-tab">
                        @Html.Partial("_Maps", Model)
                    </div>

                    <div class="tab-pane fade" id="Applicants-@Model.ProjectsId" role="tabpanel" aria-labelledby="Applicants-@Model.ProjectsId-tab">
                        @Html.Partial("_Applicants", Model)
                    </div>

                    <div class="tab-pane fade" id="notes-@Model.ProjectsId" role="tabpanel" aria-labelledby="notes-@Model.ProjectsId-tab">
                        <div class="card card-custom">
                            <div class="row">
                                <div class="col-12 ">
                                    <div class="form-row">
                                        @Html.TextAreaFor(m => m.Notes, new { @class = "form-control notepad", rows = "6", cols = "15", style = "min-width: 100%!important;", Name = "Notes-" + @Model.ProjectsId, Id = "Notes-" + @Model.ProjectsId })
                                        <div class="form-group col-md-12 summer-notes-pad">
                                            @*@Html.LabelFor(m => m.Notes, "Project Notes", new { @class = "control-label text-light" })*@


                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <input class="form-control d-none" id="InfoTabOpen" name="InfoTabOpen" type="number" value="@Model.InfoTabOpen" />
                <input class="form-control d-none" id="JsonProfession" name="JsonProfession" type="text" value="@Model.JsonProfession" />
                <input class="form-control d-none" id="ProjectsId" name="ProjectsId" type="text" value="@Model.ProjectsId" />
                <input class="form-control d-none" id="ProjectsUsersId" name="ProjectsUsersId" type="text" value="@Model.ProjectsUsersId" />
                <input class="form-control d-none" id="CanPublish" name="CanPublish" type="text" value="0" />
                <input class="form-control d-none" id="Skills" name="Skills" type="text" value="0" />
            </div>

            <div class="card-footer text-right">
                <span class="btn btn-info publish-@Model.ProjectsId  no-edit float-left " disabled>Publish Project</span>

                <span class="btn btn-primary submit-@Model.ProjectsId no-edit">Save Project</span>
                <span class="btn btn-primary close-@Model.ProjectsId">Close</span>
            </div>
        </div>
    </fieldset>
</div>
<div class="fullA-applicant-profile-view"></div>
<script>

      Dropzone.autoDiscover = false;
    var json = "";
    var SkillsCount = 0;
    var CompensationCount = 0;
    var BasicInfoCount = 0;


    $('.profileA-btn').on('click', function (evt) {
        var $detailDiv = $('.fullA-applicant-profile-view');

        $.get('/Account/FullProfile?Id=' + $(this).attr('data-contractor-id'), function (data) {
            $detailDiv.replaceWith('<div class="fullA-applicant-profile-view">' + data + '</div>');
            //$detailDiv.replaceWith(data);

            $('.bd-example-modal-lg').modal('show').on('hidden.bs.modal', function (e) {

                $('.fullA-applicant-profile-view').html('');
            });

        });
    });

    $('.make-payment').on('click', function (evt) {
        $('.paypal-cc').toggle();
    });

    //


    function CheckForPublishCount() {
        if (SkillsCount == 0 && CompensationCount == 0 && BasicInfoCount == 0) {
            $('.publish-@Model.ProjectsId').attr('disabled', false).removeClass('disabled');
            $('#ProjectStatus').attr('disabled', false).removeClass('disabled');
        }
        else {
             $('.publish-@Model.ProjectsId').attr('disabled', true).addClass('disabled');
                $('#ProjectStatus').attr('disabled', true).addClass('disabled');
        }

        console.log(SkillsCount + ':' +  CompensationCount + ':' +  BasicInfoCount)
    }

    var PublishCount =  setInterval(CheckForPublishCount,1000);

     function GetSkillsCount() {
        var count = $('.project-skills').length;
        if (count == 0) {
            $('.skills-badge').html('1');
            SkillsCount = 1;
        } else {
            $('.skills-badge').html('')
            SkillsCount = 0;
         }

     }


     function GetCompensationCount() {
       var SelectedProjectCompensationPackage = $('.compensation-@Model.ProjectsId #SelectedProjectCompensationPackage option:selected').val();


              $('.compensation-@Model.ProjectsId #SelectedProjectCompensationPackage').prev().removeClass('error');

         if (SelectedProjectCompensationPackage == '') {
             $('.compensation-badge').html('1');
             $('.compensation-@Model.ProjectsId #SelectedProjectCompensationPackage').prev().addClass('error');
             CompensationCount = 1;
        } else {
             $('.compensation-badge').html('')
             CompensationCount = 0;
         }
     }

     function GetBasicInfoCount() {
        var basicInfoCount = 0;

        var Description = $('.notes-description').summernote('code');
        var Address = $('.basicinformation-@Model.ProjectsId #Address').val();
        var City = $('.basicinformation-@Model.ProjectsId #City').val();
        var State = $('.basicinformation-@Model.ProjectsId #State').val();
        var ZipCode = $('.basicinformation-@Model.ProjectsId #ZipCode').val();
        var Duration = $('.basicinformation-@Model.ProjectsId #Duration').val();
        var NumberOfContractorsNeeded = $('.basicinformation-@Model.ProjectsId #NumberOfContractorsNeeded').val();
        var NumberOfDaysHelpIsNeeded = $('.basicinformation-@Model.ProjectsId #NumberOfDaysHelpIsNeeded').val();

        $('.project-description-lbl').removeClass('error');
        $('.basicinformation-@Model.ProjectsId #Address').prev().removeClass('error');
        $('.basicinformation-@Model.ProjectsId #City').prev().removeClass('error');
        $('.basicinformation-@Model.ProjectsId #State').prev().removeClass('error');
        $('.basicinformation-@Model.ProjectsId #ZipCode').prev().removeClass('error');
        $('.basicinformation-@Model.ProjectsId #Duration').prev().removeClass('error');
        $('.basicinformation-@Model.ProjectsId #NumberOfContractorsNeeded').prev().removeClass('error');
        $('.basicinformation-@Model.ProjectsId #NumberOfDaysHelpIsNeeded').prev().removeClass('error');




         if (Description == '') {
             basicInfoCount = basicInfoCount + 1;
               $('.project-description-lbl').addClass('error');
         }

         if (Address == '') {
             basicInfoCount = basicInfoCount + 1;
              $('.basicinformation-@Model.ProjectsId #Address').prev().addClass('error');
         }

         if (City == '') {
             basicInfoCount = basicInfoCount + 1;
              $('.basicinformation-@Model.ProjectsId #City').prev().addClass('error');
         }

         if (State == '') {
             basicInfoCount = basicInfoCount + 1;
              $('.basicinformation-@Model.ProjectsId #State').prev().addClass('error');
         }

         if (ZipCode == '00000' || ZipCode == '') {
             basicInfoCount = basicInfoCount + 1;
              $('.basicinformation-@Model.ProjectsId #ZipCode').prev().addClass('error');
         }

         if (Duration == '') {
             basicInfoCount = basicInfoCount + 1;
             $('.basicinformation-@Model.ProjectsId #Duration').prev().addClass('error');
         }

         if (NumberOfContractorsNeeded == 0) {
             basicInfoCount = basicInfoCount + 1;
              $('.basicinformation-@Model.ProjectsId #NumberOfContractorsNeeded').prev().addClass('error');
         }

         if (NumberOfDaysHelpIsNeeded == 0) {
             basicInfoCount = basicInfoCount + 1;
             $('.basicinformation-@Model.ProjectsId #NumberOfDaysHelpIsNeeded').prev().addClass('error');
         }

            //console.log(basicInfoCount + ':' + Description);
            //console.log(basicInfoCount + ':' + Address);
            //console.log(basicInfoCount + ':' + City);
            //console.log(basicInfoCount + ':' + State);
            //console.log(basicInfoCount + ':' + ZipCode);
            //console.log(basicInfoCount + ':' + Duration);
            //console.log(basicInfoCount + ':' + NumberOfContractorsNeeded);
            //console.log(basicInfoCount + ':' + NumberOfDaysHelpIsNeeded);
            //console.log('basicInfoCount:' + basicInfoCount)

            if (basicInfoCount == 0) {
                $('.basic-info-badge').html('');
            } else {
                $('.basic-info-badge').html(basicInfoCount);

            }
            BasicInfoCount = basicInfoCount;

        }


    $(document).ready(function () {


        GetBasicInfoCount();
        GetSkillsCount();
        GetCompensationCount();



        $('.publish-@Model.ProjectsId').on('click', function (event) {
            $.ajax({
                type: "POST",
                url: "/Account/PublishProject",
                data: { projectID: @Model.ProjectsId },
                success: function () {
                    swal("Project has been published.", "", "success");
                      $('body').loading('start');
                    LoadData('user-projects', 'Account', 'UpdateProjectPortal');
                    $("html, body").animate({ scrollTop: 0 }, 0);
                }
            });
        });

       $('.view-project-main-div  .project-id-@Model.ProjectsId').find('input, textarea, select').on('change', function (event) {
           GetBasicInfoCount();
           GetCompensationCount();
        });

        $('.view-project-main-div').hide();

        $('.close-@Model.ProjectsId').on('click', function (event) {
            event.preventDefault();
            $('.project-id-@Model.ProjectsId').hide();
            clearInterval(PublishCount);
             $('body').loading('start');
              LoadData('user-projects', 'Account', 'UpdateProjectPortal');
             $("html, body").animate({ scrollTop: 0 }, 0);
        });

        $('.submit-@Model.ProjectsId').on('click', function (event) {
            event.preventDefault();
              clearInterval(PublishCount);
            var ProjectTitle = $('.basicinformation-@Model.ProjectsId #ProjectTitle').val();
           // var Description = $('.basicinformation-@Model.ProjectsId #Description').val();
            var Description = $('.notes-description').summernote('code');

            var Address = $('.basicinformation-@Model.ProjectsId #Address').val();
            var City = $('.basicinformation-@Model.ProjectsId #City').val();
            var State = $('.basicinformation-@Model.ProjectsId #State option:selected').val();
            var ZipCode = $('.basicinformation-@Model.ProjectsId #ZipCode').val();
            var Notes = $('#Notes-@Model.ProjectsId').summernote('code');
            var Duration = $('.basicinformation-@Model.ProjectsId #Duration option:selected').val();
            var ProjectStatus = $('.basicinformation-@Model.ProjectsId #ProjectStatus option:selected').val();
            var NumberOfContractorsNeeded = $('.basicinformation-@Model.ProjectsId #NumberOfContractorsNeeded').val();
            var NumberOfDaysHelpIsNeeded = $('.basicinformation-@Model.ProjectsId #NumberOfDaysHelpIsNeeded').val();
            var ByTheHourRate = $('.compensation-@Model.ProjectsId #ByTheHourRate').val();
            var ByTheProjectRate = $('.compensation-@Model.ProjectsId #ByTheProjectRate').val();
            var StartingBidRate = $('.compensation-@Model.ProjectsId #StartingBidRate').val();
            var StartingBidDate = $('.compensation-@Model.ProjectsId #StartingBidDate').val();
            var EndingBidDate = $('.compensation-@Model.ProjectsId #EndingBidDate').val();
            var SelectedProjectCompensationPackage = $('.compensation-@Model.ProjectsId #SelectedProjectCompensationPackage option:selected').val();

            if (SelectedProjectCompensationPackage == '') { SelectedProjectCompensationPackage = 0; }
            if (Duration == '') { Duration = 0; }
            if (NumberOfContractorsNeeded == '') { NumberOfContractorsNeeded = 0; }
            if (NumberOfDaysHelpIsNeeded == '') { NumberOfDaysHelpIsNeeded = 0; }
            if (ZipCode == '') { ZipCode = '00000'; }

            $.ajax({
                type: "POST",
                url: "/Account/UpdateProject",
                data: {
                        ProjectTitle: ProjectTitle,
                        Description: Description,
                        Address: Address,
                        City: City,
                        State: State,
                        ZipCode: ZipCode,
                        projectID:@Model.ProjectsId,
                        ByTheHourRate: ByTheHourRate,
                        ByTheProjectRate: ByTheProjectRate,
                        StartingBidRate: StartingBidRate,
                        StartingBidDate: StartingBidDate,
                        EndingBidDate: EndingBidDate,
                        SelectedProjectCompensationPackage: SelectedProjectCompensationPackage,
                        Notes: Notes,
                        Duration: Duration,
                        NumberOfContractorsNeeded: NumberOfContractorsNeeded,
                        NumberOfDaysHelpIsNeeded: NumberOfDaysHelpIsNeeded,
                        ProjectStatus: ProjectStatus
                },
                success: function () {
                    $('.project-id-@Model.ProjectsId').hide();
                    swal("Project has been updated.", "", "success");
                    $('body').loading('start');
                    LoadData('user-projects', 'Account', 'UpdateProjectPortal');
                    $("html, body").animate({ scrollTop: 0 }, 0);




                }
            });
            return false;

        });

        $(".documents-@Model.ProjectsId #dropzoneDocumentUpload").dropzone({
            init: function () {
                this.on("processing", function (file) {
                    this.options.url = "/Account/upload?type=project&projectId=" + $('.documents-@Model.ProjectsId #ProjectsId').val();
                    $('.dropzone-error').empty();
                });

                this.on("error", function (file, message, xhr) {
                    if (xhr === null) this.removeFile(file);

                    $('.dropzone-error').append(message);
                });

            },
            url: "/Account/upload?type=project&projectId=" + $('.documents-@Model.ProjectsId #ProjectsId').val(),
            addRemoveLinks: false,
            autoProcessQueue: true,
            createImageThumbnails: false,
            uploadMultiple: true,
            parallelUploads: 10,
            acceptedFiles: ".jpeg,.jpg,.png",
            dictDefaultMessage: "   Add Project Image(s).....",
            success: function (file, response) {

                var image;
                var comment;


                $.each(response, function (y, k) {
                    $.each(k, function (index, message) {
                        image = "/Uploads/Projects/" + $('.documents-@Model.ProjectsId #ProjectsId').val() + "/" + $('.documents-@Model.ProjectsId #ProjectsUsersId').val() + "/" + message.ImageName;

                        // add the image and comment divs
                        $('.documents-@Model.ProjectsId .ProfileImage').append('<div class="card ' + message.ImageName.split('.')[0] + '" style="margin-bottom: 10px;margin-top: 10px;background-color: rgba(255, 255, 255, 0.5) !important;"><div class="card-body"><div class="remove-profileimage-div"><img style="margin-bottom:10px;" class="img-thumbnail" src="' + image + '"><button class="btn remove-profileimage-' + message.ImageName.split('.')[0] + '">X</button></div><div class="form-inline"><div class="form-group" style="margin-right: 10px !important;"><label style="padding:5px">Add Comment</label><input type="text" class="form-control ' + message.ImageName.split('.')[0] + '_comment"></div><button class="btn btn-primary ' + message.ImageName.split('.')[0] + '_submit" style="margin - left: 5px">Add</button><div class="' + message.ImageName.split('.')[0] + '-comment-added" style="margin-left: 10px;color: #EAF901 !important;"><h6>Comment Added</h6></div></div></div></div>');

                        //hide all add comment divs
                        $('.documents-@Model.ProjectsId .' + message.ImageName.split('.')[0] + '-comment-added').hide();

                        $('.documents-@Model.ProjectsId .' + message.ImageName.split('.')[0] + '_submit').prop("disabled", true);

                        $('.documents-@Model.ProjectsId .' + message.ImageName.split('.')[0] + '_comment').on("keyup", action);

                        function action() {
                            if ($('.documents-@Model.ProjectsId .' + message.ImageName.split('.')[0] + '_comment').val().length > 0) {
                                $('.documents-@Model.ProjectsId .' + message.ImageName.split('.')[0] + '_submit').prop("disabled", false);
                            } else {
                                $('.documents-@Model.ProjectsId .' + message.ImageName.split('.')[0] + '_submit').prop("disabled", true);
                            }
                        }

                        //comment button
                        $('.documents-@Model.ProjectsId .' + message.ImageName.split('.')[0] + '_submit').click(function () {


                            // add comment to document/image
                            $.ajax({
                                type: "POST",
                                url: "/Account/SaveProjectImageComment?ImageName=" + message.ImageName + "&comment=" + $('.documents-@Model.ProjectsId .' + message.ImageName.split('.')[0] + '_submit').parent().find('input').val(),
                                success: function () {
                                    // show them that the comment was added then fade away
                                    $('.documents-@Model.ProjectsId .' + message.ImageName.split('.')[0] + '-comment-added').fadeIn(1000).fadeOut(5000);
                                }
                            });
                            return false;
                        });

                        // remove image and comment
                        $('.documents-@Model.ProjectsId .remove-profileimage-' + message.ImageName.split('.')[0]).click(function () {


                            if (confirm('Are you sure you want to delete this?')) {
                                $.ajax({
                                    type: "POST",
                                    url: "/Account/RemoveUpload?type=project&projectId=" + $('.documents-@Model.ProjectsId #ProjectsId').val() + "&imagename=" + $(this).parent().find('img').attr('src'),
                                    success: function () {

                                        // it has been deleted form the server now delete from the UI
                                        $('.documents-@Model.ProjectsId .' + message.ImageName.split('.')[0]).remove();

                                    }
                                });
                            }

                            return false;
                        });

                        ///////////////
                    });
                });
                ////////////////
            },
            error: function (file, response) {
                // file.previewElement.classList.add("dz-error");
            },
            complete: function (file, response) {
                this.removeAllFiles(true);
            }

        });



         $('.notes-description').summernote({
            height: 500, // set editor height
            minHeight: 500, // set minimum height of editor
            maxHeight: 1000, // set maximum height of editor
            focus: false, // set focus to editable area after initializing summernote  ,
            callbacks: {
                onChange: function (contents, $editable) {


                }
            }
        });
        $('.notes-description').on('summernote.change', function (we, contents, $editable) {
             GetBasicInfoCount();
        });

        $('#Notes-@Model.ProjectsId').summernote({
            height: 500, // set editor height
            minHeight: 500, // set minimum height of editor
            maxHeight: 1000, // set maximum height of editor
            focus: false, // set focus to editable area after initializing summernote  ,
            callbacks: {
                onChange: function (contents, $editable) {


                }
            }
        });

        $('#notes-@Model.ProjectsId .note-editable').html($('#notes-@Model.ProjectsId  #Notes').html())


        // hide the sub cat list until ready
        $('.skills-@Model.ProjectsId .Professions').hide();
        $('.skills-@Model.ProjectsId .SubProfessions').hide();
        $('.skills-@Model.ProjectsId .update-professions').hide();

        $('.skills-@Model.ProjectsId .Alphabetical').click(function () {
            $('.skills-@Model.ProjectsId .Professions').show();
            $.getJSON('/Account/AutoComplete', { term: this.innerText }, function (item) {

                $(".skills-@Model.ProjectsId #Professions").empty();
                $(".skills-@Model.ProjectsId #Professions").append("<option value='- Please Select A Profession Category -'>- Please Select A Profession Category -</option>");

                $.each(item, function (index, data) {
                    $(".skills-@Model.ProjectsId #Professions").append("<option value='" + data.ID + "'>" + data.Name + "</option>");
                });

            });
        });

        $('.skills-@Model.ProjectsId #Professions').change(function (event, ui) {
            $.get('/Account/GetSubCategoryList', { Id: this.value }, function (data) {

                $(".skills-@Model.ProjectsId #SubProfessions").empty();
                $(".skills-@Model.ProjectsId .SubProfessions").show();

                $(".skills-@Model.ProjectsId #SubProfessions").append("<option value='- Please Select A Job Title -'>- Please Select A Job Title -</option>");
                $.each(data, function (index, row) {
                    $(".skills-@Model.ProjectsId #SubProfessions").append("<option data-info='" + $(".skills-@Model.ProjectsId #Professions option:selected").text() + "'  value='" + this.MainCatId + '_' + row.Id + "'>" + row.SubCatNames + "</option>");

                });


            });
        });

    // add new sub(s) from list
        $('.skills-@Model.ProjectsId .add').click(function () {

            if ($(".skills-@Model.ProjectsId #SubProfessions option:selected").val() !== '- Please Select A Job Title -') {


                $('.skills-@Model.ProjectsId .update-professions').show();

                //empty the textbox and setup for next search
                $('.skills-@Model.ProjectsId #SelectedProfession').val('');
                $('.skills-@Model.ProjectsId .sublist').hide();

                $('.skills-@Model.ProjectsId .results').append('<div class="result-added new project-skills" id="' + $(".skills-@Model.ProjectsId #SubProfessions option:selected").val() + '"><span class="btn btn-outline-danger btn-sm " role="button" style="margin: 5px;">remove</span>' + $(".skills-@Model.ProjectsId #Professions option:selected").text() + ' -- ' + $(".skills-@Model.ProjectsId #SubProfessions option:selected").text() + '</div>')

                $('#Skills').val($('.project-skills').length);

                GetSkillsCount();


                // updates the hidden field
                $('.skills-@Model.ProjectsId .new').each(function (index, value) {
                    json += $(".skills-@Model.ProjectsId #SubProfessions option:selected").val() + ',';
                });
                //sets the hidden field for postback
                $('.skills-@Model.ProjectsId #JsonProfession').val(json);

                //add cat and sub cat
                var mainID = $(".skills-@Model.ProjectsId #Professions option:selected").val();
                var subID = $(".skills-@Model.ProjectsId #SubProfessions option:selected").val().split('_')[1];
                var projectID = @Model.ProjectsId;

                $.post('/Account/AddProjectContractorCustomerCategories',{ mainId: mainID,subId: subID, projectId: projectID }, function (data) { });


                // remove the selected one after we add it
                $('.skills-@Model.ProjectsId #SubProfessions').find('option:selected').remove().end();


            }
            else {
                alert('Please Select A Job Title');
            }

        });

        $('.skills-@Model.ProjectsId .remove').click(function (e) {

            $(this).parent().remove();

            $.post('/Account/RemoveUserContractorCustomerCategories', { mainId: $(this).attr('data-id').split(" ")[0], subId: $(this).attr('data-id').split(" ")[1] }, function (data) {

            });

             $('#Skills').val($('.project-skills').length);

                GetSkillsCount();

        });



        function Onload() {

            @*$('.close-@Model.ProjectsId').hide();*@

            $('.compensation-@Model.ProjectsId  .startdate-project-datepicker').datepicker('setDate', new Date($('.compensation-@Model.ProjectsId #StartingBidDate').val()));
            $('.compensation-@Model.ProjectsId .enddate-project-datepicker').datepicker('setDate', new Date($('.compensation-@Model.ProjectsId #EndingBidDate').val()));

            // set up the click event
            $('.remove').click(function (e) {

                $.post('/Account/RemoveProjectContractorCustomerCategories', { mainId: $(this).attr('data-mainId'), subId: $(this).attr('data-subId'), projectId: $('#ProjectsId').val() }, function (data) { });

                $(this).parent().remove();

            });

            // THIS IS WHEN THE FORM FIRST LOADS TO SHOW THE ITEMS WE NEED
            if ($('.compensation-@Model.ProjectsId #SelectedProjectCompensationPackage').val() !== '- Please Select A Project Compensation Type -') {
                $('.compensation-@Model.ProjectsId .hourly-rate').hide();
                $('.compensation-@Model.ProjectsId .project-rate').hide();
                $('.compensation-@Model.ProjectsId .project-bid-rate').hide();

                switch ($('.compensation-@Model.ProjectsId #SelectedProjectCompensationPackage').val()) {
                    case "1":
                        $('.compensation-@Model.ProjectsId .hourly-rate').show();
                        break;


                    case "2":
                        $('.compensation-@Model.ProjectsId .project-rate').show();

                        break;

                    case "3":
                        $('.compensation-@Model.ProjectsId .project-bid-rate').show();

                        break;
                }
            }


        }

        $('.compensation-@Model.ProjectsId #SelectedProjectCompensationPackage').change(function (event, ui) {

            $('.compensation-@Model.ProjectsId .hourly-rate').hide();
            $('.compensation-@Model.ProjectsId .project-rate').hide();
            $('.compensation-@Model.ProjectsId .project-bid-rate').hide();

            switch ($(this).val()) {
                case "1":
                    $('.compensation-@Model.ProjectsId .hourly-rate').val('');
                    $('.compensation-@Model.ProjectsId .hourly-rate').show();
                    break;


                case "2":
                    $('.compensation-@Model.ProjectsId .project-rate').val('');
                    $('.compensation-@Model.ProjectsId .project-rate').show();

                    break;

                case "3":
                    $('.compensation-@Model.ProjectsId .project-bid-rate').val('');
                    $('.compensation-@Model.ProjectsId #StartingBidDate').val('');
                    $('.compensation-@Model.ProjectsId .project-bid-rate').show();

                    break;
            }




        });


        $('.compensation-@Model.ProjectsId .startdate-project-datepicker').datepicker({
            uiLibrary: 'bootstrap4',
            dateFormat: 'mm/dd/yy',
            format: 'LT',
            onSelect: function (dateText, inst) {
                $('.compensation-@Model.ProjectsId #StartingBidDate').val(dateText);
            }
        });

        $('.compensation-@Model.ProjectsId .enddate-project-datepicker').datepicker({
            uiLibrary: 'bootstrap4',
            dateFormat: 'mm/dd/yy',
            format: 'LT',
            onSelect: function (dateText, inst) {
                $('.compensation-@Model.ProjectsId #EndingBidDate').val(dateText);
            }
        });


     Onload();



    });





    $(document).ready(function () {

        if ($('.mode').val() == 'v') {

            $('.project-view .view-project-main-div  .project-id-@Model.ProjectsId').find('input, textarea, button, select').attr('disabled', 'disabled');
            $('#Notes-@Model.ProjectsId').summernote('disable');
            $('.no-edit').hide();
            $('.project-id-@Model.ProjectsId').show();
            $('.project-editing-type').text('Viewing ');
            $('.close-@Model.ProjectsId').show();
            $('.project-view .view-project-main-div').show();
            $('body').loading('stop');
            $('html,body').animate({ scrollTop: $('.project-view').offset().top - 100 });

        }


        if ($('.mode').val() == 'e') {
            $('.view-project-main-div  .project-id-@Model.ProjectsId').find('input, textarea, button, select').removeAttr('disabled');
            $('#Notes-@Model.ProjectsId').summernote('enable');
            $('.no-edit').show();
            $('.project-editing-type').text('Editing ')
            $('.project-id-@Model.ProjectsId').show();
            $('.close-@Model.ProjectsId').show();
           $('.project-view .view-project-main-div').show();
            $('body').loading('stop');
            $('html,body').animate({ scrollTop: $('.project-view').offset().top - 100 });

            if ($('#CanPublish').val() == '0') {
                $('.publish-@Model.ProjectsId').attr('disabled', true).addClass('disabled');
                $('#ProjectStatus').attr('disabled', true).addClass('disabled');
            }

            if ($('#ZipCode').val() == '00000') {
                $('#ZipCode').val('')
            }


        }


        if ($('.mode').val() == 'n') {
            $('.view-project-main-div  .project-id-@Model.ProjectsId').find('input, textarea, button, select').removeAttr('disabled');
            $('#Notes-@Model.ProjectsId').summernote('enable');
            $('.no-edit').show();
            $('.project-id-@Model.ProjectsId').show();
            $('.project-editing-type').text('Editing ')
            $('.close-@Model.ProjectsId').show();
            $('#myTab-@Model.ProjectsId' + ' li:last-child a').tab('show');
            $('.project-view .view-project-main-div').show();
            $('body').loading('stop');
            $('html,body').animate({ scrollTop: $('.project-view').offset().top - 100 });
          ;
        }

    });
</script>
